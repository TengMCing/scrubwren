% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/py_convert.R
\name{py_convert_toggle}
\alias{py_convert_toggle}
\alias{py_convert_on}
\alias{py_convert_off}
\title{Toggle automatic Python-to-R conversion}
\usage{
py_convert_on(env)

py_convert_off(env)
}
\arguments{
\item{env}{Environment. A Python object proxy as returned by \code{reticulate}. Must be an R
environment representing a Python object.}
}
\value{
Invisibly returns \code{env} with its \code{convert} flag updated.
}
\description{
These functions control whether objects from Python are automatically
converted to their R equivalents when accessed through \code{reticulate}.
}
\details{
\itemize{
\item \code{py_convert_on()} enables automatic conversion for a given Python object.
\item \code{py_convert_off()} disables automatic conversion for a given Python object.
}

The \code{env} must be a Python object proxy (typically a module, class instance,
or similar R environment created by \code{reticulate}).
}
\examples{
\dontrun{
# Assume `np` is a Python module (NumPy)
np <- reticulate::import("numpy", convert = FALSE)

# Turn conversion on
py_convert_on(np)
np$array(c(1,2,3)) |> class()  # returns R array

# Turn conversion off
py_convert_off(np)
np$array(c(1,2,3)) |> class()  # returns Python object
}

}
